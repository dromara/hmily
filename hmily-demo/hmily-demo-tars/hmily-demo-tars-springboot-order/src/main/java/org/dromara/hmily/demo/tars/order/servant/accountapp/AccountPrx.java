/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.7.2.
// **********************************************************************

package org.dromara.hmily.demo.tars.order.servant.accountapp;

import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.annotation.*;
import com.qq.tars.common.support.Holder;
import org.dromara.hmily.annotation.Hmily;

import java.util.concurrent.CompletableFuture;

@Servant
public interface AccountPrx {

	 @Hmily
	 boolean payment(@TarsMethodParameter(name="userId")String userId, @TarsMethodParameter(name="amount")double amount);

	 boolean payment(@TarsMethodParameter(name="userId")String userId, @TarsMethodParameter(name="amount")double amount, @TarsContext java.util.Map<String, String> ctx);

	 boolean async_payment(@TarsCallback AccountPrxCallback callback, @TarsMethodParameter(name="userId")String userId, @TarsMethodParameter(name="amount")double amount);

	 boolean async_payment(@TarsCallback AccountPrxCallback callback, @TarsMethodParameter(name="userId")String userId, @TarsMethodParameter(name="amount")double amount, @TarsContext java.util.Map<String, String> ctx);

	 CompletableFuture<Boolean>  promise_payment(@TarsMethodParameter(name="userId")String userId, @TarsMethodParameter(name="amount")double amount);

	 CompletableFuture<Boolean>  promise_payment(@TarsMethodParameter(name="userId")String userId, @TarsMethodParameter(name="amount")double amount, @TarsContext java.util.Map<String, String> ctx);
}
